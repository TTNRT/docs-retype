[[{"l":"Home","p":["Please chosse your topic on the sidebar."]}],[{"l":"FAQ","p":["This group is unfinished at this time! Check back later!"]}],[{"l":"Home","p":["This group is unfinished at this time! Check back later!"]}],[{"l":"Blocking","p":["When it comes to attacks, we have to take extra steps to prevent network attacks or, in this case, DDOS attacks. For this, we use a GeoIP database system to block a certain country that can pose a threat to us. This is mostly done on Cloudflare or on the origin server."]},{"l":"Why we do this","p":["For one, most countrys around the globe can attack websites with DDOS attacks, by sending packets to that server and taking it down. While this is not typical in our current modern day web, at any time, a attack can occur. Our websites and site locations are configured to utilize and block countrys that show a threat to us. A seperate plan would have to block the IP the attack came from."]},{"l":"How it works","p":["The country would have to send a request to the site location via a web browser or simailer system that will send requests back and back on their private network. Once a request is send, the web server will log it to the origin server and show extra details based on the request it sent. If the country is on the blacklist, their request will be blocked or redirected to a seprate page showing that their country or IP is blocked and cannot accpect their request. Depending on what we use, this process might be different based on their choosing."]}],[{"l":"Overview","p":["This page will go over the infrastructure on our websites and servers operated by TTNRT."]}],[{"l":"Web server","p":["On site, it is importent to serve a web server that can send content to the client in vise-versa. This process goes as far from proxying to serving web files. This list can include the following.","HTML","PHP","JSON/JWT","Other types of content that can be served are:","NodeJS server","Docker server"]},{"l":"Forwarding to the internet","p":["Our next approach is to send all of the data to the internet. In this case, forwarding the web server to a gateway. While most of our sites are mostly forwarded to a proxy server, some are forwarded using Cloudflare tunnels, a system designed to forward any port or website server using it's own protocal system. Furthermore, all of our services are protected using the Cloudflare infrastructure, mainly through a CDN or DNS system. Requests are still sent back to the origin server in this case."]},{"l":"General use","p":["Usuallly a web server would have to only use static files, in case proxying is not available. Mostly, our configuration is set to use custom headers to inform the user that they are accessing a secure web server and that information is stored better. This is mostly possabile on most web server applications.","If you want to see what the actual headers are when accessing our sites, open your browsers dev tools window and check the \"Network\" tab. Once you refresh the page, you can select the page's URL to see it's headers. An example like this is shown below."]}],[{"l":"FAQ","p":["Q: What is it about?","A: It's all about hosting static sites using TTGit's API and backend.","Q: How does it work?","A: The system works as a normal web serve would, expect it gathers data from TTGit to serve data from the repo you are requesting. The program is writen in golang and is proxyed through nginx","Q: Is there support for custom domains?","A: No. The code that is used for the software has no support for it.","Q: Can I use static site generators with it?","A: Right now, testing for that is not ready at this time. However, such deployment would use docker based CI interfaces."]}],[{"l":"Quick start","p":["Follow this quick start guide to get your site up and running with TTPages."]},{"l":"General requirements","p":["To get started with this service, you should have:","A TTGit account","Static files (only HTML-based!)"]},{"l":"Setting up your repository","p":["To start off, create your repository. You should have the following information for it below.","Name: subdomain.ttnrtsite.io or other name (see option 1)","Branch: pages","Topic: pages","This section has two options that you can pick from, depending on your setup."]},{"l":"Option one","p":["Create your repo with any name you like. The repo should have a pages branch, along with the pages topic. Once you created the repo, you may upload your static data to it. Once done, go to this URL in this form. https://owner.ttnrtsite.io/reponame/path","Reponame is your repository name","Owner is your username"]},{"l":"Option two","p":["Create your repo, but with a name like this. owner.ttnrtsite.io. The repo should also have a pages branch, along with the pages topic. Once you created the repo, you may upload your static data to it. Once done, go to this URL in this form. https://owner.ttnrtsite.io/","Owner is your username"]}],[{"l":"Bring a local folder to remote repo","p":["This page will discuss on how to add your local folder to your remote Git repo from TTGit. For this to work you should have the following:","A repository on TTGit","A local folder to work with","Your account username and password","The git-scm client"]},{"l":"Creating your folder","p":["To start off, you should have a empty folder created somewhere on your computer. Keep it safe to protect your privacy. Once you have on, you can open a terminal interface app and go into the folder. For this tutorial, we are using Linux. Once your inside the folder, go to your TTGit profile and select your repository that you want to use."]},{"l":"Initialize the local directory","p":["Once you find your repository you are going to use, go back to your terminal app and type in this command.","Make sure to have the Git client installed! If you don't have it, go the official website and install it for your correct operating system.","After you have initialize your folder with git, you can add your files. To do this, type these commands.","You can change the message to whatever you want. It's best to keep it formal if you have group that works on project or something."]},{"l":"Remote the repo","p":["Once you have your data inside the commit, you are ready to add your repository to your folder. Go back to TTGit with your repository opened. Find the URL of the repository near the 3 dots button. It should look something like this.","Copy that URL and keep note of it. Once you have it, go back to your terminal app and type this command.","Make sure to have your username and email for authorizing to push your commit. If you didn't do it yet, follow our \"Setup your Git client\" guide before proceeding.","Replace remote repository URL with your URL you kept note of. You should also verify your remote origin as well. Type this command to do so."]},{"l":"Push your changes","p":["It's time to push your changes! Before doing so, let's look at your branch name. Your branch name is important when pushing your changes. The default name is main. If your branch name is different, change the name with this command.","And then push it to that branch you created.","If you don't have to change anything, you can push your changes using the command below."]},{"l":"Troubleshooting","p":["If you end up with errors like \"Updates were rejected because the remote contains work that you do not have locally\", this is normally because that the remote repo is recently created manually. Make sure you are not overwriting anything on the remote end before you force push local git folder to it using. You can fix it using this flag with your push command. It would look like this.","If you also want to add a branch without the need of using the push command while committing your changes, you can use this command below, which will allow you to checkout your changes without the need of using the -u part of the git command. Make sure to change the branch name to the one you put in for your repo after creating it."]},{"l":"Sources","p":["Rejected updates","Bring local folder to git"]}],[{"l":"Customizing your profile","p":["This page is subjected to be updated! Note that some content may not be accurate for the time being."]}],[{"l":"Setup your Git client","p":["This page is subjected to be updated! Note that some content may not be accurate for the time being."]}],[{"l":"Using the built-in Actions","p":["The use Gitea Actions (now called TTGit Actions) is a way to automate workflows much easier, rather than pushing files yourself to your repository. This service is free without any charges, which means that we will not pay or have usage on your account when using this service."]},{"l":"Preparing your runner","p":["For the use of TTGit Actions, you will need a runner, along with Docker installed on your computer. You should already have access to the actions tab in either your account page, or inside your repository, whatever one that suits you the best. Go to your account page, click on the \"Actions\" tab, and click on the \"Runner\" option.","In the runners page, you cans see that you have no runners listed on your account. To add one, you need get your registration token from the \"Create new runner\" dropdown button. The image below shows what it will look it on your screen.","If you click on the \"How to start a runner\" button, you will be redirected to the Gitea Docs site to setup your runner. In this case, we will use some parts of that page and use it here for a better process. If you lost your token, you can always click on the \"Reset registration token\" button to reset. Always make sure you copy it using the clipboard button next to your token. Keep note of it for the following steps."]},{"l":"Downloading the runner","p":["TTGit Actions uses a executable to run your runner. To download it to your computer, click this to get your runner file. Keep in mind that you need to specify your Operating System you are using. In this case, we will choose the Linux version.","In case if you are using the Linux version, make sure you pick the correct architecture based on your system processer. For example, if your system is a Raspberry Pi, choose the ARM version. Otherwise, pick the AMD64 version. This also goes if you are using a Apple device.","It is recommended to download the latest version of the runner executable. Download your runner file to any location of your choosing.","Since the executable is marked as non-executable, you should use the chmod command (if using linux) to allow it to run correctly! The command will look like this:","Once you downloaded your file and allowed it to execute, you can now register your runner!"]},{"l":"Registering your runner"}],[{"l":"Using the CI","p":["This page is subjected to be updated! Note that some content may not be accurate for the time being."]}],[{"l":"FAQ and support","p":["A: Not all services will use the Open ID Connect system, so we can't tell if all services, including myTT, will use this method of sign-in.","A: The best answer we can give that your account may or may not be deleted after deleting your account on the ID system. Your account is linked to whatever account you made and is supposed to be that way as long as it should.","A: TTNRT ID is running on Keycloak as it's base framework and the service is located on US East.","A: We haven't looked into that as of now. However, your account is linked to that account you created on the database and what service your using with it.","A: Yes it is. Your account will still be accessible through the sign-in portal as it should.","A: Yes you should! Git clients don't support the use of OAuth or OpenID connect with external providers, so you should add a username and password when linking. This is important if you are using Git-scm for pushing, pulling or committing changes to your repo. You should also add an email after creating if needed.","A: Yes you should! When signing up for our services, your account doesn't match what you post to the database. As a workaround, you should consider having the same email, username and password in case you need your password if your client or application uses that.","A: Yes you should.","A: You should report them to our support email right away if you are having issues with the system.","Q: How can I report issues if the system is not working for me or is having issues?","Q: If I delete my account on TTNRT ID, what will happen to my login for the service I'm using it for?","Q: If I get my account removed or delete it, will TTGit or any other service that relys on TTNRT ID remove it from their database?","Q: If I'm going to add a account with this system on TTGit, is it okay and safe for me to add a password along with a username? With the Git client as well?","Q: If I'm going to use TTNRT ID with my services, should I use the same email, username, and password for that service I'm using?","Q: Is it safe to link my current account with the ID system?","Q: What is TTNRT ID running on and what site is it on?","Q: When I change my password on the ID system, should I also change on the service as well if it doesn't update it automatically?","Q: Will all services use this system as part of the safety plan in place?","We know that people like to ask us questions about our new services. Here are some questions that you might ask about using TTNRT ID."]}],[{"l":"Introduction","p":["TTNRT ID is a identification system for login and register with the exception of extra security being applied to the users account. It was introduced in early April and was released to the public later on during the month. Furthermore, this system is more like myTT but only in a SSO sign-in method for our services."]},{"l":"Services currently using it","p":["As of April of 2024, most of our services that support the OpenID Connect method of sign-in. The table below is a list of services that are currently using or are in progress.","Name","Date of deployment","Method of login","TTGit","04/15/2024","Login and signup","TTSocial","04/21/2024"]}]]